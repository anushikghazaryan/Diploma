{"ast":null,"code":"var _jsxFileName = \"/home/anushik/Desktop/dip/seebattle/src/components/GameComponent.jsx\";\nimport React, { Component } from 'react';\nimport Service from '../services/Service';\nimport { Link, withRouter } from \"react-router-dom\";\nimport Stylesheet from './Stylesheet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CONST = {};\nCONST.AVAILABLE_SHIPS = ['1.1', '1.2', '1.3', '1.4', '2.1', '2.2', '2.3', '3.1', '3.2', '4.1']; // You are player 0 and the computer is player 1\n// The virtual player is used for generating temporary ships\n// for calculating the probability heatmap\n\nCONST.HUMAN_PLAYER = 0;\nCONST.COMPUTER_PLAYER = 1;\nCONST.VIRTUAL_PLAYER = 2; // Possible values for the parameter `type` (string)\n\nCONST.CSS_TYPE_EMPTY = 'empty';\nCONST.CSS_TYPE_SHIP = 'ship';\nCONST.CSS_TYPE_MISS = 'miss';\nCONST.CSS_TYPE_HIT = 'hit';\nCONST.CSS_TYPE_SUNK = 'sunk'; // Grid code:\n\nCONST.TYPE_EMPTY = 0; // 0 = water (empty)\n\nCONST.TYPE_SHIP = 1; // 1 = undamaged ship\n\nCONST.TYPE_MISS = 2; // 2 = water with a cannonball in it (missed shot)\n\nCONST.TYPE_HIT = 3; // 3 = damaged ship (hit shot)\n\nCONST.TYPE_SUNK = 4; // 4 = sunk ship\n\nCONST.TYPE_NOT_ALLOWED = 5;\nGame.usedShips = [CONST.UNUSED, CONST.UNUSED, CONST.UNUSED, CONST.UNUSED, CONST.UNUSED];\nCONST.USED = 1;\nCONST.UNUSED = 0;\n\nfunction Game(size) {\n  Game.size = size;\n  this.shotsTaken = 0;\n  this.createGrid();\n  this.init();\n}\n\n_c = Game;\nGame.size = 10; // Default grid size is 10x10\n\nGame.gameOver = false; // Checks if the game is won, and if it is, re-initializes the game\n\nGame.prototype.checkIfWon = function () {\n  if (this.computerFleet.allShipsSunk()) {\n    alert('Congratulations, you win!');\n    Game.gameOver = true; // Game.stats.wonGame();\n    // Game.stats.syncStats();\n    // Game.stats.updateStatsSidebar();\n\n    this.showRestartSidebar();\n  } else if (this.humanFleet.allShipsSunk()) {\n    alert('Yarr! The computer sank all your ships. Try again.');\n    Game.gameOver = true; // Game.stats.lostGame();\n    // Game.stats.syncStats();\n    // Game.stats.updateStatsSidebar();\n\n    this.showRestartSidebar();\n  }\n}; // Shoots at the target player on the grid.\n// Returns {int} Constants.TYPE: What the shot uncovered\n\n\nGame.prototype.shoot = function (x, y, targetPlayer) {\n  let targetGrid;\n  let targetFleet;\n\n  if (targetPlayer === CONST.HUMAN_PLAYER) {\n    targetGrid = this.humanGrid;\n    targetFleet = this.humanFleet;\n  } else if (targetPlayer === CONST.COMPUTER_PLAYER) {\n    targetGrid = this.computerGrid;\n    targetFleet = this.computerFleet;\n  } else {\n    // Should never be called\n    console.log(\"There was an error trying to find the correct player to target\");\n  }\n\n  if (targetGrid.isDamagedShip(x, y)) {\n    return null;\n  } else if (targetGrid.isMiss(x, y)) {\n    return null;\n  } else if (targetGrid.isUndamagedShip(x, y)) {\n    // update the board/grid\n    targetGrid.updateCell(x, y, 'hit', targetPlayer); // IMPORTANT: This function needs to be called _after_ updating the cell to a 'hit',\n    // because it overrides the CSS class to 'sunk' if we find that the ship was sunk\n\n    targetFleet.findShipByCoords(x, y).incrementDamage(); // increase the damage\n\n    this.checkIfWon();\n    return CONST.TYPE_HIT;\n  } else {\n    targetGrid.updateCell(x, y, 'miss', targetPlayer);\n    this.checkIfWon();\n    return CONST.TYPE_MISS;\n  }\n}; // Creates click event listeners on each one of the 100 grid cells\n\n\nGame.prototype.shootListener = function (e) {\n  var self = e.target.self; // Extract coordinates from event listener\n\n  var x = parseInt(e.target.getAttribute('data-x'), 10);\n  var y = parseInt(e.target.getAttribute('data-y'), 10);\n  var result = null;\n\n  if (self.readyToPlay) {\n    result = self.shoot(x, y, CONST.COMPUTER_PLAYER); // Remove the tutorial arrow\n\n    if (gameTutorial.showTutorial) {\n      gameTutorial.nextStep();\n    }\n  }\n\n  if (result !== null && !Game.gameOver) {\n    //Game.stats.incrementShots();\n    // if (result === CONST.TYPE_HIT) {\n    // \tGame.stats.hitShot();\n    // }\n    // The AI shoots iff the player clicks on a cell that he/she hasn't\n    // already clicked on yet\n    self.robot.shoot();\n  } else {\n    Game.gameOver = false;\n  }\n}; // Creates click event listeners on each of the ship names in the roster\n\n\nGame.prototype.rosterListener = function (e) {\n  var self = e.target.self; // Remove all classes of 'placing' from the fleet roster first\n\n  var roster = document.querySelectorAll('.fleet-roster li');\n\n  for (var i = 0; i < roster.length; i++) {\n    var classes = roster[i].getAttribute('class') || '';\n    classes = classes.replace('placing', '');\n    roster[i].setAttribute('class', classes);\n  } // Move the highlight to the next step\n\n\n  if (gameTutorial.currentStep === 1) {\n    gameTutorial.nextStep();\n  } // Set the class of the target ship to 'placing'\n\n\n  Game.placeShipType = e.target.getAttribute('id');\n  document.getElementById(Game.placeShipType).setAttribute('class', 'placing');\n  Game.placeShipDirection = parseInt(document.getElementById('rotate-button').getAttribute('data-direction'), 10);\n  self.placingOnGrid = true;\n}; // Creates click event listeners on the human player's grid to handle\n// ship placement after the user has selected a ship name\n\n\nGame.prototype.placementListener = function (e) {\n  var self = e.target.self;\n\n  if (self.placingOnGrid) {\n    // Extract coordinates from event listener\n    var x = parseInt(e.target.getAttribute('data-x'), 10);\n    var y = parseInt(e.target.getAttribute('data-y'), 10); // Don't screw up the direction if the user tries to place again.\n\n    var successful = self.humanFleet.placeShip(x, y, Game.placeShipDirection, Game.placeShipType);\n\n    if (successful) {\n      // Done placing this ship\n      self.endPlacing(Game.placeShipType); // Remove the helper arrow\n\n      if (gameTutorial.currentStep === 2) {\n        gameTutorial.nextStep();\n      }\n\n      self.placingOnGrid = false;\n\n      if (self.areAllShipsPlaced()) {\n        var el = document.getElementById('rotate-button');\n        el.addEventListener(transitionEndEventName(), function () {\n          el.setAttribute('class', 'hidden');\n\n          if (gameTutorial.showTutorial) {\n            document.getElementById('start-game').setAttribute('class', 'highlight');\n          } else {\n            document.getElementById('start-game').removeAttribute('class');\n          }\n        }, false);\n        el.setAttribute('class', 'invisible');\n      }\n    }\n  }\n}; // Creates mouseover event listeners that handles mouseover on the\n// human player's grid to draw a phantom ship implying that the user\n// is allowed to place a ship there\n\n\nGame.prototype.placementMouseover = function (e) {\n  var self = e.target.self;\n\n  if (self.placingOnGrid) {\n    var x = parseInt(e.target.getAttribute('data-x'), 10);\n    var y = parseInt(e.target.getAttribute('data-y'), 10);\n    var classes;\n    var fleetRoster = self.humanFleet.fleetRoster;\n\n    for (var i = 0; i < fleetRoster.length; i++) {\n      var shipType = fleetRoster[i].type;\n\n      if (Game.placeShipType === shipType && fleetRoster[i].isLegal(x, y, Game.placeShipDirection)) {\n        // Virtual ship\n        fleetRoster[i].create(x, y, Game.placeShipDirection, true);\n        Game.placeShipCoords = fleetRoster[i].getAllShipCells();\n\n        for (var j = 0; j < Game.placeShipCoords.length; j++) {\n          var el = document.querySelector('.grid-cell-' + Game.placeShipCoords[j].x + '-' + Game.placeShipCoords[j].y);\n          classes = el.getAttribute('class'); // Check if the substring ' grid-ship' already exists to avoid adding it twice\n\n          if (classes.indexOf(' grid-ship') < 0) {\n            classes += ' grid-ship';\n            el.setAttribute('class', classes);\n          }\n        }\n      }\n    }\n  }\n}; // Creates mouseout event listeners that un-draws the phantom ship\n// on the human player's grid as the user hovers over a different cell\n\n\nGame.prototype.placementMouseout = function (e) {\n  var self = e.target.self;\n\n  if (self.placingOnGrid) {\n    for (var j = 0; j < Game.placeShipCoords.length; j++) {\n      var el = document.querySelector('.grid-cell-' + Game.placeShipCoords[j].x + '-' + Game.placeShipCoords[j].y);\n      var classes = el.getAttribute('class'); // Check if the substring ' grid-ship' already exists to avoid adding it twice\n\n      if (classes.indexOf(' grid-ship') > -1) {\n        classes = classes.replace(' grid-ship', '');\n        el.setAttribute('class', classes);\n      }\n    }\n  }\n}; // Click handler for the Rotate Ship button\n\n\nGame.prototype.toggleRotation = function (e) {\n  // Toggle rotation direction\n  var direction = parseInt(e.target.getAttribute('data-direction'), 10);\n\n  if (direction === Ship.DIRECTION_VERTICAL) {\n    e.target.setAttribute('data-direction', '1');\n    Game.placeShipDirection = Ship.DIRECTION_HORIZONTAL;\n  } else if (direction === Ship.DIRECTION_HORIZONTAL) {\n    e.target.setAttribute('data-direction', '0');\n    Game.placeShipDirection = Ship.DIRECTION_VERTICAL;\n  }\n}; // Click handler for the Start Game button\n\n\nGame.prototype.startGame = function (e) {\n  var self = e.target.self;\n  var el = document.getElementById('roster-sidebar');\n\n  var fn = function () {\n    el.setAttribute('class', 'hidden');\n  };\n\n  el.addEventListener(transitionEndEventName(), fn, false);\n  el.setAttribute('class', 'invisible');\n  self.readyToPlay = true; // Advanced the tutorial step\n\n  if (gameTutorial.currentStep === 3) {\n    gameTutorial.nextStep();\n  }\n\n  el.removeEventListener(transitionEndEventName(), fn, false);\n}; // Click handler for Restart Game button\n\n\nGame.prototype.restartGame = function (e) {\n  e.target.removeEventListener(e.type, arguments.callee);\n  var self = e.target.self;\n  document.getElementById('restart-sidebar').setAttribute('class', 'hidden');\n  self.resetFogOfWar();\n  self.init();\n}; // Debugging function used to place all ships and just start\n\n\nGame.prototype.placeRandomly = function (e) {\n  e.target.removeEventListener(e.type, arguments.callee);\n  e.target.self.humanFleet.placeShipsRandomly();\n  e.target.self.readyToPlay = true;\n  document.getElementById('roster-sidebar').setAttribute('class', 'hidden');\n  this.setAttribute('class', 'hidden');\n}; // Ends placing the current ship\n\n\nGame.prototype.endPlacing = function (shipType) {\n  document.getElementById(shipType).setAttribute('class', 'placed'); // Mark the ship as 'used'\n\n  Game.usedShips[CONST.AVAILABLE_SHIPS.indexOf(shipType)] = CONST.USED; // Wipe out the variable when you're done with it\n\n  Game.placeShipDirection = null;\n  Game.placeShipType = '';\n  Game.placeShipCoords = [];\n}; // Checks whether or not all ships are done placing\n// Returns boolean\n\n\nGame.prototype.areAllShipsPlaced = function () {\n  var playerRoster = document.querySelectorAll('.fleet-roster li');\n\n  for (var i = 0; i < playerRoster.length; i++) {\n    if (playerRoster[i].getAttribute('class') === 'placed') {\n      continue;\n    } else {\n      return false;\n    }\n  } // Reset temporary variables\n\n\n  Game.placeShipDirection = 0;\n  Game.placeShipType = '';\n  Game.placeShipCoords = [];\n  return true;\n}; // Resets the fog of war\n\n\nGame.prototype.resetFogOfWar = function () {\n  for (var i = 0; i < Game.size; i++) {\n    for (var j = 0; j < Game.size; j++) {\n      this.humanGrid.updateCell(i, j, 'empty', CONST.HUMAN_PLAYER);\n      this.computerGrid.updateCell(i, j, 'empty', CONST.COMPUTER_PLAYER);\n    }\n  } // Reset all values to indicate the ships are ready to be placed again\n\n\n  Game.usedShips = Game.usedShips.map(function () {\n    return CONST.UNUSED;\n  });\n}; // Resets CSS styling of the sidebar\n\n\nGame.prototype.resetRosterSidebar = function () {\n  console.log(document.getElementById('fleet-roster'));\n  var els = document.querySelector('.fleet-roster').querySelectorAll('li');\n\n  for (var i = 0; i < els.length; i++) {\n    els[i].removeAttribute('class');\n  }\n\n  if (gameTutorial.showTutorial) {\n    gameTutorial.nextStep();\n  } else {\n    document.getElementById('roster-sidebar').removeAttribute('class');\n  }\n\n  document.getElementById('rotate-button').removeAttribute('class');\n  document.getElementById('start-game').setAttribute('class', 'hidden'); // if (DEBUG_MODE) {\n  // \tdocument.getElementById('place-randomly').removeAttribute('class');\n  // }\n};\n\nGame.prototype.showRestartSidebar = function () {\n  var sidebar = document.getElementById('restart-sidebar');\n  sidebar.setAttribute('class', 'highlight'); // Deregister listeners\n\n  var computerCells = document.querySelector('.computer-player').childNodes;\n\n  for (var j = 0; j < computerCells.length; j++) {\n    computerCells[j].removeEventListener('click', this.shootListener, false);\n  }\n\n  var playerRoster = document.querySelector('.fleet-roster').querySelectorAll('li');\n\n  for (var i = 0; i < playerRoster.length; i++) {\n    playerRoster[i].removeEventListener('click', this.rosterListener, false);\n  }\n\n  var restartButton = document.getElementById('restart-game');\n  restartButton.addEventListener('click', this.restartGame, false);\n  restartButton.self = this;\n}; // Generates the HTML divs for the grid for both players\n\n\nGame.prototype.createGrid = function () {\n  var gridDiv = document.querySelectorAll('.grid');\n\n  for (var grid = 0; grid < gridDiv.length; grid++) {\n    gridDiv[grid].removeChild(gridDiv[grid].querySelector('.no-js')); // Removes the no-js warning\n\n    for (var i = 0; i < Game.size; i++) {\n      for (var j = 0; j < Game.size; j++) {\n        var el = document.createElement('div');\n        el.setAttribute('data-x', i);\n        el.setAttribute('data-y', j);\n        el.setAttribute('class', 'grid-cell grid-cell-' + i + '-' + j);\n        gridDiv[grid].appendChild(el);\n      }\n    }\n  }\n}; // Initializes the Game. Also resets the game if previously initialized\n\n\nGame.prototype.init = function () {\n  this.humanGrid = new Grid(Game.size);\n  this.computerGrid = new Grid(Game.size);\n  this.humanFleet = new Fleet(this.humanGrid, CONST.HUMAN_PLAYER);\n  this.computerFleet = new Fleet(this.computerGrid, CONST.COMPUTER_PLAYER);\n  this.robot = new AI(this); //Game.stats = new Stats();\n  //Game.stats.updateStatsSidebar();\n  // Reset game variables\n\n  this.shotsTaken = 0;\n  this.readyToPlay = false;\n  this.placingOnGrid = false;\n  Game.placeShipDirection = 0;\n  Game.placeShipType = '';\n  Game.placeShipCoords = [];\n};\n\nclass BattlesComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      battles: []\n    };\n  }\n\n  componentDidMount() {\n    Service.getAllBattles().then(res => {\n      this.setState({\n        battles: res.data.content\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Battles List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"restart-sidebar\",\n            className: \"hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"restart-game\",\n              children: \"Restart Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"roster-sidebar\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Place Your Ships\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"fleet-roster\",\n              id: \"fleet-roster\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"1.1\",\n                children: \"1 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"1.2\",\n                children: \"1 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"1.3\",\n                children: \"1 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"1.4\",\n                children: \"1 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"2.1\",\n                children: \"2 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"2.2\",\n                children: \"2 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"2.3\",\n                children: \"2 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"3.1\",\n                children: \"3 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"3.2\",\n                children: \"3 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"4.1\",\n                children: \"4 \\u0565\\u0580\\u056F\\u0561\\u0580\\u0578\\u0582\\u0569\\u0575\\u0561\\u0576\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"rotate-button\",\n              \"data-direction\": \"0\",\n              children: \"Rotate Ship\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"start-game\",\n              className: \"hidden\",\n              children: \"Start Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"place-randomly\",\n              className: \"hidden\",\n              children: \"Place Randomly and Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Your Fleet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid human-player\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"no-js\",\n                children: \"Please enable JavaScript to play this game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Enemy Fleet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid computer-player\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"no-js\",\n                children: \"Please enable JavaScript to play this game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"js/battleboat.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"prefetch\",\n        id: \"prefetch1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"prefetch\",\n        id: \"prefetch2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"prefetch\",\n        id: \"prefetch3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Stylesheet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c2 = withRouter(BattlesComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/anushik/Desktop/dip/seebattle/src/components/GameComponent.jsx"],"names":["React","Component","Service","Link","withRouter","Stylesheet","CONST","AVAILABLE_SHIPS","HUMAN_PLAYER","COMPUTER_PLAYER","VIRTUAL_PLAYER","CSS_TYPE_EMPTY","CSS_TYPE_SHIP","CSS_TYPE_MISS","CSS_TYPE_HIT","CSS_TYPE_SUNK","TYPE_EMPTY","TYPE_SHIP","TYPE_MISS","TYPE_HIT","TYPE_SUNK","TYPE_NOT_ALLOWED","Game","usedShips","UNUSED","USED","size","shotsTaken","createGrid","init","gameOver","prototype","checkIfWon","computerFleet","allShipsSunk","alert","showRestartSidebar","humanFleet","shoot","x","y","targetPlayer","targetGrid","targetFleet","humanGrid","computerGrid","console","log","isDamagedShip","isMiss","isUndamagedShip","updateCell","findShipByCoords","incrementDamage","shootListener","e","self","target","parseInt","getAttribute","result","readyToPlay","gameTutorial","showTutorial","nextStep","robot","rosterListener","roster","document","querySelectorAll","i","length","classes","replace","setAttribute","currentStep","placeShipType","getElementById","placeShipDirection","placingOnGrid","placementListener","successful","placeShip","endPlacing","areAllShipsPlaced","el","addEventListener","transitionEndEventName","removeAttribute","placementMouseover","fleetRoster","shipType","type","isLegal","create","placeShipCoords","getAllShipCells","j","querySelector","indexOf","placementMouseout","toggleRotation","direction","Ship","DIRECTION_VERTICAL","DIRECTION_HORIZONTAL","startGame","fn","removeEventListener","restartGame","arguments","callee","resetFogOfWar","placeRandomly","placeShipsRandomly","playerRoster","map","resetRosterSidebar","els","sidebar","computerCells","childNodes","restartButton","gridDiv","grid","removeChild","createElement","appendChild","Grid","Fleet","AI","BattlesComponent","constructor","props","state","battles","componentDidMount","getAllBattles","then","res","setState","data","content","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Service from '../services/Service';\nimport { Link, withRouter } from \"react-router-dom\";\nimport Stylesheet from './Stylesheet';\n\nvar CONST = {};\n\tCONST.AVAILABLE_SHIPS = ['1.1', '1.2', '1.3', '1.4', '2.1', '2.2', '2.3', '3.1', '3.2', '4.1'];\n\t// You are player 0 and the computer is player 1\n\t// The virtual player is used for generating temporary ships\n\t// for calculating the probability heatmap\n\tCONST.HUMAN_PLAYER = 0;\n\tCONST.COMPUTER_PLAYER = 1;\n\tCONST.VIRTUAL_PLAYER = 2;\n\t// Possible values for the parameter `type` (string)\n\tCONST.CSS_TYPE_EMPTY = 'empty';\n\tCONST.CSS_TYPE_SHIP = 'ship';\n\tCONST.CSS_TYPE_MISS = 'miss';\n\tCONST.CSS_TYPE_HIT = 'hit';\n\tCONST.CSS_TYPE_SUNK = 'sunk';\n\t// Grid code:\n\tCONST.TYPE_EMPTY = 0; // 0 = water (empty)\n\tCONST.TYPE_SHIP = 1; // 1 = undamaged ship\n\tCONST.TYPE_MISS = 2; // 2 = water with a cannonball in it (missed shot)\n\tCONST.TYPE_HIT = 3; // 3 = damaged ship (hit shot)\n\tCONST.TYPE_SUNK = 4; // 4 = sunk ship\n\tCONST.TYPE_NOT_ALLOWED = 5;\n\n\tGame.usedShips = [CONST.UNUSED, CONST.UNUSED, CONST.UNUSED, CONST.UNUSED, CONST.UNUSED];\n\tCONST.USED = 1;\n\tCONST.UNUSED = 0;\n\n    function Game(size) {\n\t\tGame.size = size;\n\t\tthis.shotsTaken = 0;\n\t\tthis.createGrid();\n\t\tthis.init();\n\t}\n\tGame.size = 10; // Default grid size is 10x10\n\tGame.gameOver = false;\n\t// Checks if the game is won, and if it is, re-initializes the game\n\tGame.prototype.checkIfWon = function() {\n\t\tif (this.computerFleet.allShipsSunk()) {\n\t\t\talert('Congratulations, you win!');\n\t\t\tGame.gameOver = true;\n\t\t\t// Game.stats.wonGame();\n\t\t\t// Game.stats.syncStats();\n\t\t\t// Game.stats.updateStatsSidebar();\n\t\t\tthis.showRestartSidebar();\n\t\t} else if (this.humanFleet.allShipsSunk()) {\n\t\t\talert('Yarr! The computer sank all your ships. Try again.');\n\t\t\tGame.gameOver = true;\n\t\t\t// Game.stats.lostGame();\n\t\t\t// Game.stats.syncStats();\n\t\t\t// Game.stats.updateStatsSidebar();\n\t\t\tthis.showRestartSidebar();\n\t\t}\n\t};\n\t// Shoots at the target player on the grid.\n\t// Returns {int} Constants.TYPE: What the shot uncovered\n\tGame.prototype.shoot = function(x, y, targetPlayer) {\n\t\tlet targetGrid;\n\t\tlet targetFleet;\n\t\tif (targetPlayer === CONST.HUMAN_PLAYER) {\n\t\t\ttargetGrid = this.humanGrid;\n\t\t\ttargetFleet = this.humanFleet;\n\t\t} else if (targetPlayer === CONST.COMPUTER_PLAYER) {\n\t\t\ttargetGrid = this.computerGrid;\n\t\t\ttargetFleet = this.computerFleet;\n\t\t} else {\n\t\t\t// Should never be called\n\t\t\tconsole.log(\"There was an error trying to find the correct player to target\");\n\t\t}\n\t\n\t\tif (targetGrid.isDamagedShip(x, y)) {\n\t\t\treturn null;\n\t\t} else if (targetGrid.isMiss(x, y)) {\n\t\t\treturn null;\n\t\t} else if (targetGrid.isUndamagedShip(x, y)) {\n\t\t\t// update the board/grid\n\t\t\ttargetGrid.updateCell(x, y, 'hit', targetPlayer);\n\t\t\t// IMPORTANT: This function needs to be called _after_ updating the cell to a 'hit',\n\t\t\t// because it overrides the CSS class to 'sunk' if we find that the ship was sunk\n\t\t\ttargetFleet.findShipByCoords(x, y).incrementDamage(); // increase the damage\n\t\t\tthis.checkIfWon();\n\t\t\treturn CONST.TYPE_HIT;\n\t\t} else {\n\t\t\ttargetGrid.updateCell(x, y, 'miss', targetPlayer);\n\t\t\tthis.checkIfWon();\n\t\t\treturn CONST.TYPE_MISS;\n\t\t}\n\t};\n\t// Creates click event listeners on each one of the 100 grid cells\n\tGame.prototype.shootListener = function(e) {\n\t\tvar self = e.target.self;\n\t\t// Extract coordinates from event listener\n\t\tvar x = parseInt(e.target.getAttribute('data-x'), 10);\n\t\tvar y = parseInt(e.target.getAttribute('data-y'), 10);\n\t\tvar result = null;\n\t\tif (self.readyToPlay) {\n\t\t\tresult = self.shoot(x, y, CONST.COMPUTER_PLAYER);\n\t\n\t\t\t// Remove the tutorial arrow\n\t\t\tif (gameTutorial.showTutorial) {\n\t\t\t\tgameTutorial.nextStep();\n\t\t\t}\n\t\t}\n\t\n\t\tif (result !== null && !Game.gameOver) {\n\t\t\t//Game.stats.incrementShots();\n\t\t\t// if (result === CONST.TYPE_HIT) {\n\t\t\t// \tGame.stats.hitShot();\n\t\t\t// }\n\t\t\t// The AI shoots iff the player clicks on a cell that he/she hasn't\n\t\t\t// already clicked on yet\n\t\t\tself.robot.shoot();\n\t\t} else {\n\t\t\tGame.gameOver = false;\n\t\t}\n\t};\n\t// Creates click event listeners on each of the ship names in the roster\n\tGame.prototype.rosterListener = function(e) {\n\t\tvar self = e.target.self;\n\t\t// Remove all classes of 'placing' from the fleet roster first\n\t\tvar roster = document.querySelectorAll('.fleet-roster li');\n\t\tfor (var i = 0; i < roster.length; i++) {\n\t\t\tvar classes = roster[i].getAttribute('class') || '';\n\t\t\tclasses = classes.replace('placing', '');\n\t\t\troster[i].setAttribute('class', classes);\n\t\t}\n\t\n\t\t// Move the highlight to the next step\n\t\tif (gameTutorial.currentStep === 1) {\n\t\t\tgameTutorial.nextStep();\n\t\t}\n\t\t\n\t\t// Set the class of the target ship to 'placing'\n\t\tGame.placeShipType = e.target.getAttribute('id');\n\t\tdocument.getElementById(Game.placeShipType).setAttribute('class', 'placing');\n\t\tGame.placeShipDirection = parseInt(document.getElementById('rotate-button').getAttribute('data-direction'), 10);\n\t\tself.placingOnGrid = true;\n\t};\n\t// Creates click event listeners on the human player's grid to handle\n\t// ship placement after the user has selected a ship name\n\tGame.prototype.placementListener = function(e) {\n\t\tvar self = e.target.self;\n\t\tif (self.placingOnGrid) {\n\t\t\t// Extract coordinates from event listener\n\t\t\tvar x = parseInt(e.target.getAttribute('data-x'), 10);\n\t\t\tvar y = parseInt(e.target.getAttribute('data-y'), 10);\n\t\t\t\n\t\t\t// Don't screw up the direction if the user tries to place again.\n\t\t\tvar successful = self.humanFleet.placeShip(x, y, Game.placeShipDirection, Game.placeShipType);\n\t\t\tif (successful) {\n\t\t\t\t// Done placing this ship\n\t\t\t\tself.endPlacing(Game.placeShipType);\n\t\n\t\t\t\t// Remove the helper arrow\n\t\t\t\tif (gameTutorial.currentStep === 2) {\n\t\t\t\t\tgameTutorial.nextStep();\n\t\t\t\t}\n\t\n\t\t\t\tself.placingOnGrid = false;\n\t\t\t\tif (self.areAllShipsPlaced()) {\n\t\t\t\t\tvar el = document.getElementById('rotate-button');\n\t\t\t\t\tel.addEventListener(transitionEndEventName(),(function(){\n\t\t\t\t\t\tel.setAttribute('class', 'hidden');\n\t\t\t\t\t\tif (gameTutorial.showTutorial) {\n\t\t\t\t\t\t\tdocument.getElementById('start-game').setAttribute('class', 'highlight');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdocument.getElementById('start-game').removeAttribute('class');\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}),false);\n\t\t\t\t\tel.setAttribute('class', 'invisible');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// Creates mouseover event listeners that handles mouseover on the\n\t// human player's grid to draw a phantom ship implying that the user\n\t// is allowed to place a ship there\n\tGame.prototype.placementMouseover = function(e) {\n\t\tvar self = e.target.self;\n\t\tif (self.placingOnGrid) {\n\t\t\tvar x = parseInt(e.target.getAttribute('data-x'), 10);\n\t\t\tvar y = parseInt(e.target.getAttribute('data-y'), 10);\n\t\t\tvar classes;\n\t\t\tvar fleetRoster = self.humanFleet.fleetRoster;\n\t\n\t\t\tfor (var i = 0; i < fleetRoster.length; i++) {\n\t\t\t\tvar shipType = fleetRoster[i].type;\n\t\n\t\t\t\tif (Game.placeShipType === shipType &&\n\t\t\t\t\tfleetRoster[i].isLegal(x, y, Game.placeShipDirection)) {\n\t\t\t\t\t// Virtual ship\n\t\t\t\t\tfleetRoster[i].create(x, y, Game.placeShipDirection, true);\n\t\t\t\t\tGame.placeShipCoords = fleetRoster[i].getAllShipCells();\n\t\n\t\t\t\t\tfor (var j = 0; j < Game.placeShipCoords.length; j++) {\n\t\t\t\t\t\tvar el = document.querySelector('.grid-cell-' + Game.placeShipCoords[j].x + '-' + Game.placeShipCoords[j].y);\n\t\t\t\t\t\tclasses = el.getAttribute('class');\n\t\t\t\t\t\t// Check if the substring ' grid-ship' already exists to avoid adding it twice\n\t\t\t\t\t\tif (classes.indexOf(' grid-ship') < 0) {\n\t\t\t\t\t\t\tclasses += ' grid-ship';\n\t\t\t\t\t\t\tel.setAttribute('class', classes);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// Creates mouseout event listeners that un-draws the phantom ship\n\t// on the human player's grid as the user hovers over a different cell\n\tGame.prototype.placementMouseout = function(e) {\n\t\tvar self = e.target.self;\n\t\tif (self.placingOnGrid) {\n\t\t\tfor (var j = 0; j < Game.placeShipCoords.length; j++) {\n\t\t\t\tvar el = document.querySelector('.grid-cell-' + Game.placeShipCoords[j].x + '-' + Game.placeShipCoords[j].y);\n\t\t\t\tvar classes = el.getAttribute('class');\n\t\t\t\t// Check if the substring ' grid-ship' already exists to avoid adding it twice\n\t\t\t\tif (classes.indexOf(' grid-ship') > -1) {\n\t\t\t\t\tclasses = classes.replace(' grid-ship', '');\n\t\t\t\t\tel.setAttribute('class', classes);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// Click handler for the Rotate Ship button\n\tGame.prototype.toggleRotation = function(e) {\n\t\t// Toggle rotation direction\n\t\tvar direction = parseInt(e.target.getAttribute('data-direction'), 10);\n\t\tif (direction === Ship.DIRECTION_VERTICAL) {\n\t\t\te.target.setAttribute('data-direction', '1');\n\t\t\tGame.placeShipDirection = Ship.DIRECTION_HORIZONTAL;\n\t\t} else if (direction === Ship.DIRECTION_HORIZONTAL) {\n\t\t\te.target.setAttribute('data-direction', '0');\n\t\t\tGame.placeShipDirection = Ship.DIRECTION_VERTICAL;\n\t\t}\n\t};\n\t// Click handler for the Start Game button\n\tGame.prototype.startGame = function(e) {\n\t\tvar self = e.target.self;\n\t\tvar el = document.getElementById('roster-sidebar');\n\t\tvar fn = function() {el.setAttribute('class', 'hidden');};\n\t\tel.addEventListener(transitionEndEventName(),fn,false);\n\t\tel.setAttribute('class', 'invisible');\n\t\tself.readyToPlay = true;\n\t\n\t\t// Advanced the tutorial step\n\t\tif (gameTutorial.currentStep === 3) {\n\t\t\tgameTutorial.nextStep();\n\t\t}\n\t\tel.removeEventListener(transitionEndEventName(),fn,false);\n\t};\n\t// Click handler for Restart Game button\n\tGame.prototype.restartGame = function(e) {\n\t\te.target.removeEventListener(e.type, arguments.callee);\n\t\tvar self = e.target.self;\n\t\tdocument.getElementById('restart-sidebar').setAttribute('class', 'hidden');\n\t\tself.resetFogOfWar();\n\t\tself.init();\n\t};\n\t// Debugging function used to place all ships and just start\n\tGame.prototype.placeRandomly = function(e){\n\t\te.target.removeEventListener(e.type, arguments.callee);\n\t\te.target.self.humanFleet.placeShipsRandomly();\n\t\te.target.self.readyToPlay = true;\n\t\tdocument.getElementById('roster-sidebar').setAttribute('class', 'hidden');\n\t\tthis.setAttribute('class', 'hidden');\n\t};\n\t// Ends placing the current ship\n\tGame.prototype.endPlacing = function(shipType) {\n\t\tdocument.getElementById(shipType).setAttribute('class', 'placed');\n\t\t\n\t\t// Mark the ship as 'used'\n\t\tGame.usedShips[CONST.AVAILABLE_SHIPS.indexOf(shipType)] = CONST.USED;\n\t\n\t\t// Wipe out the variable when you're done with it\n\t\tGame.placeShipDirection = null;\n\t\tGame.placeShipType = '';\n\t\tGame.placeShipCoords = [];\n\t};\n\t// Checks whether or not all ships are done placing\n\t// Returns boolean\n\tGame.prototype.areAllShipsPlaced = function() {\n\t\tvar playerRoster = document.querySelectorAll('.fleet-roster li');\n\t\tfor (var i = 0; i < playerRoster.length; i++) {\n\t\t\tif (playerRoster[i].getAttribute('class') === 'placed') {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// Reset temporary variables\n\t\tGame.placeShipDirection = 0;\n\t\tGame.placeShipType = '';\n\t\tGame.placeShipCoords = [];\n\t\treturn true;\n\t};\n\t// Resets the fog of war\n\tGame.prototype.resetFogOfWar = function() {\n\t\tfor (var i = 0; i < Game.size; i++) {\n\t\t\tfor (var j = 0; j < Game.size; j++) {\n\t\t\t\tthis.humanGrid.updateCell(i, j, 'empty', CONST.HUMAN_PLAYER);\n\t\t\t\tthis.computerGrid.updateCell(i, j, 'empty', CONST.COMPUTER_PLAYER);\n\t\t\t}\n\t\t}\n\t\t// Reset all values to indicate the ships are ready to be placed again\n\t\tGame.usedShips = Game.usedShips.map(function(){return CONST.UNUSED;});\n\t};\n\t// Resets CSS styling of the sidebar\n\tGame.prototype.resetRosterSidebar = function() {\n\t\tconsole.log(document.getElementById('fleet-roster'));\n\t\tvar els = document.querySelector('.fleet-roster').querySelectorAll('li');\n\t\tfor (var i = 0; i < els.length; i++) {\n\t\t\tels[i].removeAttribute('class');\n\t\t}\n\t\n\t\tif (gameTutorial.showTutorial) {\n\t\t\tgameTutorial.nextStep();\n\t\t} else {\n\t\t\tdocument.getElementById('roster-sidebar').removeAttribute('class');\n\t\t}\n\t\tdocument.getElementById('rotate-button').removeAttribute('class');\n\t\tdocument.getElementById('start-game').setAttribute('class', 'hidden');\n\t\t// if (DEBUG_MODE) {\n\t\t// \tdocument.getElementById('place-randomly').removeAttribute('class');\n\t\t// }\n\t};\n\tGame.prototype.showRestartSidebar = function() {\n\t\tvar sidebar = document.getElementById('restart-sidebar');\n\t\tsidebar.setAttribute('class', 'highlight');\n\t\n\t\t// Deregister listeners\n\t\tvar computerCells = document.querySelector('.computer-player').childNodes;\n\t\tfor (var j = 0; j < computerCells.length; j++) {\n\t\t\tcomputerCells[j].removeEventListener('click', this.shootListener, false);\n\t\t}\n\t\tvar playerRoster = document.querySelector('.fleet-roster').querySelectorAll('li');\n\t\tfor (var i = 0; i < playerRoster.length; i++) {\n\t\t\tplayerRoster[i].removeEventListener('click', this.rosterListener, false);\n\t\t}\n\t\n\t\tvar restartButton = document.getElementById('restart-game');\n\t\trestartButton.addEventListener('click', this.restartGame, false);\n\t\trestartButton.self = this;\n\t};\n\t// Generates the HTML divs for the grid for both players\n\tGame.prototype.createGrid = function() {\n\t\tvar gridDiv = document.querySelectorAll('.grid');\n\t\tfor (var grid = 0; grid < gridDiv.length; grid++) {\n\t\t\tgridDiv[grid].removeChild(gridDiv[grid].querySelector('.no-js')); // Removes the no-js warning\n\t\t\tfor (var i = 0; i < Game.size; i++) {\n\t\t\t\tfor (var j = 0; j < Game.size; j++) {\n\t\t\t\t\tvar el = document.createElement('div');\n\t\t\t\t\tel.setAttribute('data-x', i);\n\t\t\t\t\tel.setAttribute('data-y', j);\n\t\t\t\t\tel.setAttribute('class', 'grid-cell grid-cell-' + i + '-' + j);\n\t\t\t\t\tgridDiv[grid].appendChild(el);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// Initializes the Game. Also resets the game if previously initialized\n\tGame.prototype.init = function() {\n\t\tthis.humanGrid = new Grid(Game.size);\n\t\tthis.computerGrid = new Grid(Game.size);\n\t\tthis.humanFleet = new Fleet(this.humanGrid, CONST.HUMAN_PLAYER);\n\t\tthis.computerFleet = new Fleet(this.computerGrid, CONST.COMPUTER_PLAYER);\n\t\n\t\tthis.robot = new AI(this);\n\t\t//Game.stats = new Stats();\n\t\t//Game.stats.updateStatsSidebar();\n\t\n\t\t// Reset game variables\n\t\tthis.shotsTaken = 0;\n\t\tthis.readyToPlay = false;\n\t\tthis.placingOnGrid = false;\n\t\tGame.placeShipDirection = 0;\n\t\tGame.placeShipType = '';\n\t\tGame.placeShipCoords = [];\n    }\n\nclass BattlesComponent extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            battles: []\n        }\n    }\n    componentDidMount(){\n        Service.getAllBattles().then((res) => {\n            this.setState({battles: res.data.content});\n        });\n    }\n    render() {\n        return (\n            <div className=\"container text-center\">\n                <h2>Battles List</h2>\n            <div className=\"game-container\">\n<div className=\"game-container\">\n\t\t<div id=\"restart-sidebar\" className=\"hidden\">\n\t\t\t<h2>Try Again</h2>\n\t\t\t<button id=\"restart-game\">Restart Game</button>\n\t\t</div><div id=\"roster-sidebar\">\n\t\t\t<h2>Place Your Ships</h2>\n\t\t\t<ul className=\"fleet-roster\" id=\"fleet-roster\">\n\t\t\t\t<li id=\"1.1\">1 երկարության</li>\n\t\t\t\t<li id=\"1.2\">1 երկարության</li>\n\t\t\t\t<li id=\"1.3\">1 երկարության</li>\n\t\t\t\t<li id=\"1.4\">1 երկարության</li>\n\t\t\t\t<li id=\"2.1\">2 երկարության</li>\n\t\t\t\t<li id=\"2.2\">2 երկարության</li>\n\t\t\t\t<li id=\"2.3\">2 երկարության</li>\n\t\t\t\t<li id=\"3.1\">3 երկարության</li>\n\t\t\t\t<li id=\"3.2\">3 երկարության</li>\n\t\t\t\t<li id=\"4.1\">4 երկարության</li>\n\t\t\t</ul>\n\t\t\t<button id=\"rotate-button\" data-direction=\"0\">Rotate Ship</button>\n\t\t\t<button id=\"start-game\" className=\"hidden\">Start Game</button>\n\t\t\t<button id=\"place-randomly\" className=\"hidden\">Place Randomly and Start</button>\n\t\t</div><div className=\"grid-container\">\n\t\t\t<h2>Your Fleet</h2>\n\t\t\t<div className=\"grid human-player\"><span className=\"no-js\">Please enable JavaScript to play this game</span></div>\n\t\t</div><div className=\"grid-container\">\n\t\t\t<h2>Enemy Fleet</h2>\n\t\t\t<div className=\"grid computer-player\"><span className=\"no-js\">Please enable JavaScript to play this game</span></div>\n\t\t</div>\n\t</div>\n\t\n</div>\n<script src=\"js/battleboat.js\"></script>\n<span className=\"prefetch\" id=\"prefetch1\"></span>\n<span className=\"prefetch\" id=\"prefetch2\"></span>\n<span className=\"prefetch\" id=\"prefetch3\"></span>\n\n<Stylesheet />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(BattlesComponent);"]},"metadata":{},"sourceType":"module"}