{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP_USER\\\\Desktop\\\\diploma\\\\Diploma\\\\seebattle\\\\src\\\\components\\\\RegisterConponent.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.gohome = () => {\n      this.props.history.replace(\"/\");\n    };\n\n    this.initialState = {\n      email: '',\n      name: '',\n      password: '',\n      confirm: '',\n      error: ''\n    };\n\n    this.credentialChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.saveUser = () => {\n      if (this.state.password === this.state.confirm) {\n        const credentials = JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password\n        }); // const token = localStorage.getItem('jwtToken');\n\n        axios.post(\"http://localhost:9090/api/v1/users/register\", credentials, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          // this.setState({ \"error\": response.data.message });\n          // my code \n          let data = response.data;\n          console.log(data.token);\n          localStorage.setItem('jwtToken', data.token);\n          localStorage.setItem('uid', data.id);\n          localStorage.setItem('role', data.role);\n          this.gohome();\n        }).catch(error => {\n          this.resetRegisterForm();\n          this.setState({\n            \"error\": \"Error!\"\n          });\n        });\n      } else {\n        this.setState({\n          \"error\": \"Passwords not the same\"\n        });\n      }\n    };\n\n    this.resetRegisterForm = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.state = this.initialState;\n  } // my code \n\n\n  isEmail(val) {\n    let regEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!regEmail.test(val)) {\n      return 'Invalid Email';\n    }\n  }\n\n  render() {\n    const {\n      email,\n      name,\n      password,\n      confirm,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 300\n          },\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"/login\",\n              method: \"post\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"email\",\n                  name: \"email\",\n                  value: email,\n                  onChange: this.credentialChange,\n                  placeholder: \"Enter Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  name: \"name\",\n                  value: name,\n                  onChange: this.credentialChange,\n                  placeholder: \"Enter Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"password\",\n                  name: \"password\",\n                  value: password,\n                  onChange: this.credentialChange,\n                  placeholder: \"Enter Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"password\",\n                  name: \"confirm\",\n                  value: confirm,\n                  onChange: this.credentialChange,\n                  placeholder: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                size: \"sm\",\n                type: \"button\",\n                variant: \"success\",\n                onClick: this.saveUser,\n                disabled: this.isEmail(this.state.email) || this.state.password.length < 6 || this.state.name.length < 2 || this.state.password.length !== this.state.confirm.length,\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/HP_USER/Desktop/diploma/Diploma/seebattle/src/components/RegisterConponent.jsx"],"names":["React","Component","withRouter","axios","Register","constructor","props","gohome","history","replace","initialState","email","name","password","confirm","error","credentialChange","event","setState","target","value","saveUser","state","credentials","JSON","stringify","post","headers","then","response","data","console","log","token","localStorage","setItem","id","role","catch","resetRegisterForm","isEmail","val","regEmail","test","render","width","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n    }\r\n    // my code \r\n    gohome = () => {\r\n        this.props.history.replace(\"/\");\r\n    };\r\n\r\n    initialState = {\r\n        email: '', name: '', password: '', confirm: '', error: ''\r\n    };\r\n\r\n    credentialChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    saveUser = () => {\r\n        if (this.state.password === this.state.confirm) {\r\n            const credentials = JSON.stringify({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            });\r\n           // const token = localStorage.getItem('jwtToken');\r\n            axios.post(\"http://localhost:9090/api/v1/users/register\", credentials, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(response => {\r\n                // this.setState({ \"error\": response.data.message });\r\n                // my code \r\n                let data = response.data;\r\n                console.log(data.token);\r\n                localStorage.setItem('jwtToken', data.token);\r\n                localStorage.setItem('uid', data.id);\r\n                localStorage.setItem('role', data.role);\r\n                this.gohome();\r\n            }).catch(error => {\r\n                this.resetRegisterForm();\r\n                this.setState({ \"error\": \"Error!\" });\r\n            });\r\n        } else {\r\n            this.setState({ \"error\": \"Passwords not the same\" });\r\n        }\r\n    };\r\n\r\n    resetRegisterForm = () => {\r\n        this.setState(() => this.initialState);\r\n    };\r\n\r\n    isEmail(val) {\r\n        let regEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!regEmail.test(val)) {\r\n            return 'Invalid Email';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { email, name, password, confirm, error } = this.state;\r\n\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <h1>Sign Up page</h1>\r\n                <div className=\"row justify-content-center\">\r\n                    <div style={{ width: 300 }}>\r\n                        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                        <div>\r\n                            <form action=\"/login\" method=\"post\">\r\n                                <div className=\"form-group\">\r\n                                    <input className=\"form-control\" required autoComplete=\"off\" type=\"email\" name=\"email\" value={email} onChange={this.credentialChange}\r\n                                        placeholder=\"Enter Email Address\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input className=\"form-control\" required autoComplete=\"off\" type=\"text\" name=\"name\" value={name} onChange={this.credentialChange}\r\n                                        placeholder=\"Enter Name\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input className=\"form-control\" required autoComplete=\"off\" type=\"password\" name=\"password\" value={password} onChange={this.credentialChange}\r\n                                        placeholder=\"Enter Password\" />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input className=\"form-control\" required autoComplete=\"off\" type=\"password\" name=\"confirm\" value={confirm} onChange={this.credentialChange}\r\n                                        placeholder=\"Confirm Password\" />\r\n\r\n                                </div>\r\n                                <button className=\"btn btn-primary\" size=\"sm\" type=\"button\" variant=\"success\" onClick={this.saveUser}\r\n                                    disabled={this.isEmail(this.state.email) || this.state.password.length < 6 || this.state.name.length < 2 || this.state.password.length !== this.state.confirm.length}>\r\n                                    Register\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Register);"]},"metadata":{},"sourceType":"module"}