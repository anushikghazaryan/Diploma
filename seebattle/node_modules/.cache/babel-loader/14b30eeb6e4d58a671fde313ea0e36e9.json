{"ast":null,"code":"var _jsxFileName = \"/home/anushik/Desktop/dip/seebattle/src/components/RegisterConponent.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      email: '',\n      name: '',\n      password: '',\n      confirm: '',\n      error: ''\n    };\n\n    this.credentialChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.saveUser = async () => {\n      if (this.state.password === this.state.confirm) {\n        const credentials = JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password\n        });\n        setTimeout(() => {}, timeout);\n      } else {\n        this.setState({\n          \"error\": \"Passwords not the same\"\n        });\n      }\n    };\n\n    this.resetRegisterForm = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.state = this.initialState;\n  }\n\n  isEmail(val) {\n    let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!regEmail.test(val)) {\n      return 'Invalid Email';\n    }\n  }\n\n  render() {\n    const {\n      email,\n      name,\n      password,\n      confirm,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 300\n          },\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"/login\",\n              method: \"post\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"email\",\n                  name: \"email\",\n                  value: email,\n                  onChange: this.credentialChange,\n                  placeholder: \"Enter Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  name: \"name\",\n                  value: name,\n                  onChange: this.credentialChange,\n                  placeholder: \"Enter Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"password\",\n                  name: \"password\",\n                  value: password,\n                  onChange: this.credentialChange,\n                  placeholder: \"Enter Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"password\",\n                  name: \"confirm\",\n                  value: confirm,\n                  onChange: this.credentialChange,\n                  placeholder: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                size: \"sm\",\n                type: \"button\",\n                variant: \"success\",\n                onClick: this.saveUser,\n                disabled: this.isEmail(this.state.email) || this.state.password.length < 6 || this.state.name.length < 2 || this.state.password.length !== this.state.confirm.length,\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/anushik/Desktop/dip/seebattle/src/components/RegisterConponent.jsx"],"names":["React","Component","withRouter","axios","Register","constructor","props","initialState","email","name","password","confirm","error","credentialChange","event","setState","target","value","saveUser","state","credentials","JSON","stringify","setTimeout","timeout","resetRegisterForm","isEmail","val","regEmail","test","render","width","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAKnBC,YALmB,GAKJ;AACXC,MAAAA,KAAK,EAAE,EADI;AACAC,MAAAA,IAAI,EAAE,EADN;AACUC,MAAAA,QAAQ,EAAE,EADpB;AACwBC,MAAAA,OAAO,EAAE,EADjC;AACqCC,MAAAA,KAAK,EAAE;AAD5C,KALI;;AAAA,SASnBC,gBATmB,GASAC,KAAK,IAAI;AACxB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaP,IAAd,GAAqBK,KAAK,CAACE,MAAN,CAAaC;AADxB,OAAd;AAGH,KAbkB;;AAAA,SAenBC,QAfmB,GAeR,YAAY;AACnB,UAAI,KAAKC,KAAL,CAAWT,QAAX,KAAwB,KAAKS,KAAL,CAAWR,OAAvC,EAAgD;AAC5C,cAAMS,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC/Bb,UAAAA,IAAI,EAAE,KAAKU,KAAL,CAAWV,IADc;AAE/BD,UAAAA,KAAK,EAAE,KAAKW,KAAL,CAAWX,KAFa;AAG/BE,UAAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWT;AAHU,SAAf,CAApB;AAKAa,QAAAA,UAAU,CAAC,MAAM,CAEhB,CAFS,EAEPC,OAFO,CAAV;AAIH,OAVD,MAUO;AACH,aAAKT,QAAL,CAAc;AAAE,mBAAS;AAAX,SAAd;AACH;AACJ,KA7BkB;;AAAA,SA+BnBU,iBA/BmB,GA+BC,MAAM;AACtB,WAAKV,QAAL,CAAc,MAAM,KAAKR,YAAzB;AACH,KAjCkB;;AAEf,SAAKY,KAAL,GAAa,KAAKZ,YAAlB;AACH;;AA+BDmB,EAAAA,OAAO,CAACC,GAAD,EAAM;AACT,QAAIC,QAAQ,GAAG,wJAAf;;AACA,QAAI,CAACA,QAAQ,CAACC,IAAT,CAAcF,GAAd,CAAL,EAAyB;AACrB,aAAO,eAAP;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEtB,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA,OAAzB;AAAkCC,MAAAA;AAAlC,QAA4C,KAAKO,KAAvD;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AAAK,UAAA,KAAK,EAAE;AAAEY,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAAA,qBACKnB,KAAK,iBAAI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,sBAAqCA;AAArC;AAAA;AAAA;AAAA;AAAA,kBADd,eAEI;AAAA,mCACI;AAAM,cAAA,MAAM,EAAC,QAAb;AAAsB,cAAA,MAAM,EAAC,MAA7B;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI;AAAO,kBAAA,SAAS,EAAC,cAAjB;AAAgC,kBAAA,QAAQ,MAAxC;AAAyC,kBAAA,YAAY,EAAC,KAAtD;AAA4D,kBAAA,IAAI,EAAC,OAAjE;AAAyE,kBAAA,IAAI,EAAC,OAA9E;AAAsF,kBAAA,KAAK,EAAEJ,KAA7F;AAAoG,kBAAA,QAAQ,EAAE,KAAKK,gBAAnH;AACI,kBAAA,WAAW,EAAC;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI;AAAO,kBAAA,SAAS,EAAC,cAAjB;AAAgC,kBAAA,QAAQ,MAAxC;AAAyC,kBAAA,YAAY,EAAC,KAAtD;AAA4D,kBAAA,IAAI,EAAC,MAAjE;AAAwE,kBAAA,IAAI,EAAC,MAA7E;AAAoF,kBAAA,KAAK,EAAEJ,IAA3F;AAAiG,kBAAA,QAAQ,EAAE,KAAKI,gBAAhH;AACI,kBAAA,WAAW,EAAC;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBALJ,eASI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI;AAAO,kBAAA,SAAS,EAAC,cAAjB;AAAgC,kBAAA,QAAQ,MAAxC;AAAyC,kBAAA,YAAY,EAAC,KAAtD;AAA4D,kBAAA,IAAI,EAAC,UAAjE;AAA4E,kBAAA,IAAI,EAAC,UAAjF;AAA4F,kBAAA,KAAK,EAAEH,QAAnG;AAA6G,kBAAA,QAAQ,EAAE,KAAKG,gBAA5H;AACI,kBAAA,WAAW,EAAC;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBATJ,eAcI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI;AAAO,kBAAA,SAAS,EAAC,cAAjB;AAAgC,kBAAA,QAAQ,MAAxC;AAAyC,kBAAA,YAAY,EAAC,KAAtD;AAA4D,kBAAA,IAAI,EAAC,UAAjE;AAA4E,kBAAA,IAAI,EAAC,SAAjF;AAA2F,kBAAA,KAAK,EAAEF,OAAlG;AAA2G,kBAAA,QAAQ,EAAE,KAAKE,gBAA1H;AACI,kBAAA,WAAW,EAAC;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAdJ,eAmBI;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAoC,gBAAA,IAAI,EAAC,IAAzC;AAA8C,gBAAA,IAAI,EAAC,QAAnD;AAA4D,gBAAA,OAAO,EAAC,SAApE;AAA8E,gBAAA,OAAO,EAAE,KAAKK,QAA5F;AACI,gBAAA,QAAQ,EAAE,KAAKQ,OAAL,CAAa,KAAKP,KAAL,CAAWX,KAAxB,KAAkC,KAAKW,KAAL,CAAWT,QAAX,CAAoBsB,MAApB,GAA6B,CAA/D,IAAoE,KAAKb,KAAL,CAAWV,IAAX,CAAgBuB,MAAhB,GAAyB,CAA7F,IAAkG,KAAKb,KAAL,CAAWT,QAAX,CAAoBsB,MAApB,KAA+B,KAAKb,KAAL,CAAWR,OAAX,CAAmBqB,MADlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCH;;AAjF4B;;AAoFjC,oBAAe9B,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n    }\n\n    initialState = {\n        email: '', name: '', password: '', confirm: '', error: ''\n    };\n\n    credentialChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    saveUser = async () => {\n        if (this.state.password === this.state.confirm) {\n            const credentials = JSON.stringify({\n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password\n            });\n            setTimeout(() => {\n                \n            }, timeout);\n            \n        } else {\n            this.setState({ \"error\": \"Passwords not the same\" });\n        }\n    };\n\n    resetRegisterForm = () => {\n        this.setState(() => this.initialState);\n    };\n    isEmail(val) {\n        let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regEmail.test(val)) {\n            return 'Invalid Email';\n        }\n    }\n\n    render() {\n        const { email, name, password, confirm, error } = this.state;\n\n        return (\n            <div className=\"container text-center\">\n                <h1>Sign Up page</h1>\n                <div className=\"row justify-content-center\">\n                    <div style={{ width: 300 }}>\n                        {error && <div className=\"alert alert-danger\">{error}</div>}\n                        <div>\n                            <form action=\"/login\" method=\"post\">\n                                <div className=\"form-group\">\n                                    <input className=\"form-control\" required autoComplete=\"off\" type=\"email\" name=\"email\" value={email} onChange={this.credentialChange}\n                                        placeholder=\"Enter Email Address\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input className=\"form-control\" required autoComplete=\"off\" type=\"text\" name=\"name\" value={name} onChange={this.credentialChange}\n                                        placeholder=\"Enter Name\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input className=\"form-control\" required autoComplete=\"off\" type=\"password\" name=\"password\" value={password} onChange={this.credentialChange}\n                                        placeholder=\"Enter Password\" />\n\n                                </div>\n                                <div className=\"form-group\">\n                                    <input className=\"form-control\" required autoComplete=\"off\" type=\"password\" name=\"confirm\" value={confirm} onChange={this.credentialChange}\n                                        placeholder=\"Confirm Password\" />\n\n                                </div>\n                                <button className=\"btn btn-primary\" size=\"sm\" type=\"button\" variant=\"success\" onClick={this.saveUser}\n                                    disabled={this.isEmail(this.state.email) || this.state.password.length < 6 || this.state.name.length < 2 || this.state.password.length !== this.state.confirm.length}>\n                                    Register\n                            </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Register);"]},"metadata":{},"sourceType":"module"}